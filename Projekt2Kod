using System;
using System.Numerics;
using System.Diagnostics;
using System.IO;
namespace Projekt2   
{
    class Program
    {
        //Projekt2 Dominik Karmoliński i Piotr Karolak k31.2
        static void Main(string[] args)
        {
            {
                BigInteger[] testprime = { 100913, 1009139, 10091401, 100914061, 1009140611, 10091406133, 100914061337, 1009140613399 };
                bool pierwsza;
                for (int i = 0; i < testprime.Length; i++)
                {
                    Stopwatch stoper = new Stopwatch();
                    stoper.Reset();
                    stoper.Start();
                    pierwsza = IsPrimeTime(testprime[i]);
                    stoper.Stop();
                    BigInteger czasWykonania = stoper.ElapsedTicks;
                    AddToFile("Zliczanie czasu1", czasWykonania);
                }

                for (int i = 0; i < testprime.Length; i++)
                {
                    pierwsza = IsPrimeOper(testprime[i]);
                }

                for (int i = 0; i < testprime.Length; i++)
                {
                    pierwsza = czyPierwszaOper(testprime[i]);
                }

                for (int i = 0; i < testprime.Length; i++)
                {
                    Stopwatch stoper = new Stopwatch();
                    stoper.Reset();
                    stoper.Start();
                    pierwsza = czyPierwszaCzas(testprime[i]);
                    stoper.Stop();
                    BigInteger czasWykonania = stoper.ElapsedTicks;
                    AddToFile("Zliczanie czasu2", czasWykonania);
                }

                bool IsPrimeOper(BigInteger Num)
                {
                    BigInteger oper = 0;
                    if (Num < 2)
                    {
                        oper++;

                        return false;
                    }
                    else if (Num < 4)
                    {
                        oper++;
                        return true;
                    }
                    else if (Num % 2 == 0)
                    {
                        oper++;
                        return false;
                    }
                    else
                    {
                        for (BigInteger u = 3; u < Num / 2; u += 2)
                        {
                            oper++;
                            if (Num % u == 0) return false;
                        }
                        AddToFile("Zliczanie Oper1", oper);
                        return true;
                    }
                }
                bool IsPrimeTime(BigInteger Num)
                {
                    if (Num < 2)
                    {
                        return false;
                    }
                    else if (Num < 4)
                    {
                        return true;
                    }
                    else if (Num % 2 == 0)
                    {
                        return false;
                    }
                    else
                    {
                        for (BigInteger u = 3; u < Num / 2; u += 2)
                        {
                            if (Num % u == 0) return false;
                        }
                        return true;
                    }
                }
                static bool czyPierwszaOper(BigInteger n)
                {
                    BigInteger oper = 0;
                    if (n < 2)
                    {
                        oper++;
                        return false;
                    }
                    for (int i = 2; i * i <= n; i++)
                    {
                        oper++;
                        if (n % i == 0)
                        {
                            oper++;
                            return false;
                        }
                    }
                    Console.WriteLine("Zliczanie oper2: ", oper);
                    AddToFile("Zliczanie Oper2", oper);
                    return true;
                }
                bool czyPierwszaCzas(BigInteger n)
                {

                    if (n < 2)
                    {
                        return false;
                    }
                    for (int i = 2; i * i <= n; i++)
                    {

                        if (n % i == 0)
                        {

                            return false;
                        }
                    }
                    return true;
                }

                static void AddToFile(string type, BigInteger zapis)
                {
                    string path = @"dane.txt";

                    if (!File.Exists(path))
                    {
                        //Tworzenie pliku
                        using (StreamWriter sw = File.CreateText(path))
                        {
                            sw.WriteLine($"{type}, {zapis}");
                        }
                    }

                    //Wypełnianie pliku danymi
                    using (StreamWriter sw = File.AppendText(path))
                    {

                        sw.WriteLine($"{type},{zapis}");
                    }
                }

            }

        }
    }
}
